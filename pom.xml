<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2024 by tibetiroka.
  ~
  ~ debian-control-linter is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~
  ~ debian-control-linter is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License along with this program. If not, see <https://www.gnu.org/licenses/>.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tibetiroka</groupId>
	<artifactId>debian-control-linter</artifactId>
	<version>1.0.0</version>

	<properties>
		<mainClass>com.tibetiroka.deblint.Main</mainClass>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<compiler-plugin.version>3.13.0</compiler-plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jakarta-mail.version>2.1.3</jakarta-mail.version>
		<junit.version>5.10.2</junit.version>
		<junit-launcher.version>1.10.2</junit-launcher.version>
		<javadoc-plugin.version>3.6.3</javadoc-plugin.version>
		<source-plugin.version>3.3.1</source-plugin.version>
		<jar-plugin.version>3.4.0</jar-plugin.version>
		<resources-plugin.version>3.3.1</resources-plugin.version>
		<assembly-plugin.version>3.6.0</assembly-plugin.version>
		<surefire-plugin.version>3.2.5</surefire-plugin.version>
		<native-plugin.version>0.10.1</native-plugin.version>
		<maven-model.version>3.9.6</maven-model.version>
	</properties>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${javadoc-plugin.version}</version>
				<configuration>
					<doclint>none</doclint>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${jar-plugin.version}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<mainClass>${mainClass}</mainClass>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${resources-plugin.version}</version>
				<executions>
					<execution>
						<id>copy-man-file</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<outputDirectory>${project.build.directory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<include>debian-control-linter.1</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>copy-copyright</id>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>compile</phase>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}</outputDirectory>
							<resources>
								<resource>
									<directory>${project.basedir}</directory>
									<includes>
										<include>COPYING</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>!debug</name>
				</property>
			</activation>
			<properties>
				<performance-options>-O3</performance-options>
			</properties>
		</profile>
		<profile>
			<id>debug</id>
			<activation>
				<property>
					<name>debug</name>
				</property>
			</activation>
			<properties>
				<performance-options>-Ob</performance-options>
			</properties>
		</profile>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>${native-plugin.version}</version>
						<extensions>true</extensions>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
							<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>
						</executions>
						<configuration>
							<imageName>${project.name}</imageName>
							<fallback>false</fallback>
							<buildArgs>
								<arg>--report-unsupported-elements-at-runtime</arg>
								<arg>-H:+UnlockExperimentalVMOptions</arg>
								<!--suppress UnresolvedMavenProperty -->
								<arg>${performance-options}</arg>
								<arg>--gc=G1</arg>
								<arg>--strict-image-heap</arg>
								<arg>--initialize-at-build-time=com.tibetiroka.deblint</arg>
								<arg>--initialize-at-run-time=com.tibetiroka.deblint.Main</arg>
								<arg>--enable-url-protocols=http,https,jar</arg>
								<arg>
									-H:ReflectionConfigurationFiles=${project.basedir}/src/main/resources/META-INF/native-image/com/tibetiroka/deblint/reflection-config.json
								</arg>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.junit.platform</groupId>
					<artifactId>junit-platform-launcher</artifactId>
					<version>${junit-launcher.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>portable</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${assembly-plugin.version}</version>
						<executions>
							<execution>
								<id>create-runnable-jar</id>
								<goals>
									<goal>single</goal>
								</goals>
								<phase>package</phase>
								<configuration>
									<archive>
										<manifest>
											<addClasspath>true</addClasspath>
											<mainClass>${mainClass}</mainClass>
											<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
											<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
										</manifest>
									</archive>
									<descriptorRefs>
										<descriptorRef>jar-with-dependencies</descriptorRef>
									</descriptorRefs>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>jakarta.mail</groupId>
			<artifactId>jakarta.mail-api</artifactId>
			<version>${jakarta-mail.version}</version>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>